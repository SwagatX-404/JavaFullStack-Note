Introduction to Java 
=================================================
01. What is Java?
02. Why Java?
03. Who invented Java?

04. Types of applications (SA and IA)?

05. What is a platform, Platform dependency, Platform independency?
06. Why C and C++ languages are Platform Dependent?
07. How Java achieved Platform Independency?
08. Important facts on Java program and Java Software?

09. Types of Java softwares?
10. Difference between JDK, JRE and JVM?
11. Why JRE is removed in Java 11v?
12. Downloading and installing JDK software? 

13. Softwares required to develop, compile and execute a Java program?
14. Java Programming Elements?
15. Java Essential Statements? 
16. Developing Hello, World program?
17. Compilation and execution procedure?
18. Compiler and JVM activites?
19. Solving compile time errors and runtime errors by our own?
20. Some more example programs?
=================================================================================
01. What is Java?
	- Java is a Platform Independent
	  Object-Oriented programming language.
	  
02. Why Java is invented?	  
	- Java was invented to achieve Platform Indepency
	  for developing internet based business application
	  
03. Who invented Java?
	- Java was invented by Mr. James Gosling
	  in SUN Microsytems in the year 1991
	  for developing network based applications
	  
	- The first version of Java 1.0 is relased 
	  in the year 1995

04. Types of applications?
	- All available softwares or projects or applications
	  are broadly divided into 2 types
		1. Stand-alone applications
		2. Internet applications

	- An application that is installed in one computer
	  and can be accessible only with in this computer
	  and can't be accessible from other computers via 
	  network is called stand-alone application

		For example: 
		  Calculator, MS-Office, Antivirus, VLC, ... are SA.
		  
	   Below diagram shows SA:
		
	- An application that is installed in one computer
	  and can be accessible from other computers throughout 
	  the world via network is called internet application
	  
		For example:
		  Amazon, irctc, instagam, bookmyshow, youtube, gmail,
		  Naresh IT, HKProgrammingWorld, etc... are IA
	 Below diagram shows IA:
	 
	 
	 
	- A  SA is a single computer and single user application
	- An IA is a multi computer and multi user application
     
	   Q1) Is browser a SA or IA?
		- SA, because we install it in our computer
		  and access it with in our computer 
		  
	   Q2) Is mobile app a SA or IA?
		- SA, because we install it in our mobile
		  and access it with in our mobile 
		  
05. What is a Platform, Platform dependency, Platform independency?
     Platform
      - A platform is a runtime environment in which a program is loaded & executed. 
      - A platform can be software only platform or hardware only platform or both. 
     
      - A computer platform is both software and hardware based platform , 
        that is OS, processor and hardware devices (ram and hard disk) 
 
      - A 'C and C++' program platform is OS, it means 
        'C and C++' programs are executed by OS directly

      - A Java program platform is 'JVM', It means 
       Java programs are not executed OS, they are executed 
       by one special intermediate software called 'JVM'. 
       
	- Java program platform is JVM and JVM platform is OS 

      - A Python program  platform is 'PVM'.
      - A .Net   program  platform is 'CLR'.
      - A HTML   page     platform is 'Browser'.
      - A audio and video files    platform is 'Media player(VLC)'.

     Platform Dependency
      - A program that is developed in one OS, ex: windows,
        if it can not execute in a different OS, ex: Linux or Mac,
        We call this program as platform dependent program
       
      - The programming language using which we develop this program 
        is called platform dependent programming language  

     Platform Independency
      - A program that is developed in one OS, ex: windows,
        if it can be executed in different OS, ex: Linux or Mac, 
        We call this program as platform independent program
       
      - The programming language using which we develop this program 
        is called platform independent programming language.  

	
	 
      - If a program or a software is directly executed by OS,
        then this program or software is a platform dependent 
	program and platform dependent software
	
      - If a program is executed by intemediate software,
        like JVM, PVM, CLR, then this program is platform independent program 

06. Why C and C++ PLs are platform dependent?
	- The C and C++ programs are compiled targetting to one particular OS

	- Hence C and C++ programs compiled code contains ML 
	  of a particular OS whose format is not understandable to differnt OS
	  and can not be executed by different OS, so C and C++ programs are 
	  called platform dependent
	  
	- Below diagram shows  C and C++ platform dependency

07. How Java achieved PI?
	- In Java, program is not compiled targetting to any particular OS
	- Java program is compiled into bytecode, 
	  which is an intermediate language all OS
	- Then later this byte code is executed by JVM 
	  by translated it into the current OS's ML code
	  
	- Because we have separate JVM for every OS, 
	   hence the same compiled code, byte code
	   is executed in all OS with the help of JVM
	- Hence Java achieved PI, that is WORA(Write Once Run Anywhere).
	
	- Below diagram shows Java's PI

08. Important facts on Java program and Java software?
	Refer diagrams

09. Types of Java software?
	Java has two types of softwares
		1. JDK 
		2. JRE
		
	Refer diagrams
	
10. Difference between JDK, JRE and JVM?
      JDK  
	- JDK stands for Java Developement Kit.
	- It provides development tool compiler, runtime envronment JVM and API
	- Hence by using JDK software we can develop, compile and execute new 
	  program also can modify existing programs
	- In developer computer we must install JDK   
	 
      JRE  
	- JRE stands for Java Runtime Environent.
	- It provides only runtime envronment JVM and API
	- Hence by using JRE software we can only execute existing programs
	- In Client/Customer computer we must install JRE
	
      JVM
	- JVM stands for Java Virtual Machine.
	- It is a Java platform, its translation software
	- It is responsible for running Java bytecode by converting it into 
	  current OS machine language 
      
11. Why public JRE is removed in Java 11v?
	- In modren web applications development
	  the client UI prages are developed by using
	  HTML, CSS and Java script or React, for running
	  HTML pages JRE is not required just Browser is sufficent
	  
	- Hence JRE is not being used in a client system
	  so it is removed in Java 11v
	
	- From Java 11v onwards we have 
	  only one Java software that is JDK
	  
12. Downloading and Installing JDK-21c and JDK-25v software? 	
	1. Open Browser
	2. Type 'JDK 21 download', press enter
	3. Click 'Java Downloads'-> JDK download page will be shown
	4. Scroll down the page -> Click JDK 21 -> Click Windows  
	5. Click 'jdk.exe' file link, download is started
	
	6. After downloading is completed
	
	7. Click on JDK.exe file -> click yes -> Click Next
	8. Click 'Change' -> remove 'Program Files\Java\' carefully
	   make path as 'C:\jdk-21\' -> Click Ok
	9. Click 'Next' -> installation is completed -> click 'Close'
	10. JDK software is installed in 'C:\jdk-21'
	    This folder is called JAVA_HOME

	11. repeate the same steps for installing jdk-25

13. Test whether JDK is running or not?
    	- Open command prompt [press windows key -> type cmd -> press enter]

	- Type the command 
		'javac  -version' press enter
		'java  -version' press enter
	   it must display java version number 

14. Setting path for accessing jdk 21 or 25 version?
	- by default the command prompt sw takes 
	  the latest installed version JDK
	  
	- if we want to use other version jdk,
	  we must set the environment variable 'path'
	  as below
	  
	- open command prompt [press window key -> type cmd -> press enter key]  
	- run below commands
			
		set path=C:\jdk-21\bin
		javac -version
		java  -version	

13. Softwares required to 'develop, compile and execute' a Java program?
	- We need three softwares
	  1. Editor		-> for developing a java program
				   for [typing and saving] a program
					   
	  2. JDK		-> for obtaining [Compiler and JVM] into our system
				   and for [Compiling and Running] our program
					   
	  3. Command prompt	-> for running 'Compiler and JVM' softwares 
		                   for compiling and running our Java program


	- Different Editor sofwares
	   1. Basic editor	   -> Notepad
	   2. Advanced editors	   -> Notepad++, Textpad, Editplus, Brackets, ...
	   3. More Adv Editors[IDE]-> Eclipse, IntelliJ, STS, VS Code, ..........
	
	- In our system we have [Notepad, JDK and Cmd Prompt]
	- Let's start programming

14. Java Programming Elements
    different building blocks, called programming elements.
	Java supports 8 programming elements
	==============================================================================
	Progrmming Elements		purpose
	==============================================================================
 	  1. Module		-> for grouping packages
	  2. Package		-> for grouping classes
	  3. Class		-> for representing RWO in PW
	  			   and for grouping variables and methods
	  4. Variables		-> for representing values and allocating memory 
	  5. Methods		-> for representing operations
	  6. Constructors	-> for storing values on variables
	  7. Blocks		-> also for storing values in variables
	  8. Inner classes	-> for representing inner object of an outer object	
	=================================================================================

	A Java program = Modules → Packages → Classes → Variables + Methods + Constructors + Blocks + Inner Classes
    Each element plays a part in building, organizing, and executing the program.

        1. Module	Used to group packages together. It helps organize large applications into smaller, manageable parts.
            🟢 Example: module student.management { ... }	

        2. Package	Used to group related classes and interfaces. Helps avoid name conflicts and organize files.
            🟢 Example: package com.school;	

        3. Class	Blueprint of an object — represents Real World Objects (RWO) in Programming World (PW). Also groups variables (data) and methods (actions).
            🟢 Example: class Student { String name; void study(){} }	

        4. Variable	Used to store values in memory. Every variable has a type (int, String, etc.) and holds data.
            🟢 Example: int age = 20;	

        5. Method	Represents operations or behavior of a class — contains logic or actions.
            🟢 Example: void display(){ System.out.println("Hello"); }	

        6. Constructor	Special method used to initialize variables when an object is created.
            🟢 Example: Student(String n){ name = n; }	

        7. Block	A group of statements inside { }. Used to store values, perform logic, or execute code.
             🟢 Example: { int x = 10; System.out.println(x); }	

        8. Inner Class	A class defined inside another class. Represents the inner object of an outer object and helps logically group related functionality.
            🟢 Example: class Outer { class Inner { } }

15. Essential statements to develop, compile, execute and print some message on console?
	- We have 3 essential statements	
		1. class			-> for developing and compiling
		2. main method			-> for executing
		3. System.out.println(-);	-> for printing a value or message
	
	- The class is essential because Java is an OOP langauge,
	  hence every program must starts with a class
	
	- The main method is essential because main method is the 
	  initial point of execution of a class. JVM executes a class
	  starts with main method.
	  	Note: if class does not have main method,  
		      JVM throws error: 'main method not found'

	- The System.out.println(-); is essential because 
	  in Java we can print any value or message only by using
	  System.out.println(-);

16. Java program structure
	- class contains main method, 
	  main method contains S.o.println()  statement

	class  <classname>  {

		main method {
			System.out.println("message");	
		}
	}

		
HW developemnt, compilation, execution, Assignment
=========================================================
17. Steps to develop a Java program?		
    - Java program develop, compilation and execition
      comes under 7 steps
	1. Open notepad
	2. Type Java code
	3. Save this progarm with .java extension

	4. Open command prompt
	5. Change drive and directory path 
	   to the project directory in which 
	   java program is saved
	
	6. Compile java program by usign 'javac' tool
	7. Execute byte code by using 'java' tool	 

18. Program #1: Develop a program to print SKProgrammingWorld on console

	Step #1: Open notepad [press Start -> type notepad -> press Enter]

	Step #2. Type below code

		class FirstProgram {
                    public static void main(String[] args) {
			System.out.println("SKProgrammingWorld!");
		    }
		}
			
	3. Save this progarm with the name Example.java 
	   in the folder "D:\FSJD\01CJ\01JB"

	4. Open command prompt [press start -> type cmd -> press enter]

	5. Change drive and directory path 
		1. Type "D:" and press enter 
		2. Type "cd D:\FSJD\01CJ\01JB" and pres enter
		
	6. Compile java program by using 'javac' tool
		-> type "javac  Example.java"
			  |->FirstProgram.class
			  
	7. Execute byte code by using 'java' tool	 
		-> type "java  FirstProgram"
			   |->Output: SKProgrammingWrold	
	
19. Compilation and Execution procedure	'
     Compilation
     ===========
        - Converting source code to bytecode and 
	  saving in bytecode in a new file with .class exetension
	  is called compilation
	- We compile a Java program by using compiler sofware 'javac' tool
	- The command for compilation 
		javac filename.java
	- Compiler produces byte code and saved in 
	  .class file with classname as file name
	- for example:
		javac  Example.java
		  |->FirstProgram.class
 
      Execution
      ==========	
        - Running Java byecode and generating output is called execution
	- We run a Java program by using JVM by using 'java' tool
	- JVM takes byte code from .class file
	- The command for execution
		java  classname
	- JVM runs a class starts with main method and displays output
	- For example:
		java  FirstProgram
		  |-> SKProgrammingWorld

Closer Look at HW program, solving CEs and REs
======================================================
20. Closer look at HW program

   class FirstProgram {
      public static void main(String[] args) {
 	 System.out.println("SKProgrammingWorld!");
      }	
   }
	
 - In the above program the words 'class, public, static, void' are keywords. 
   We must use them with all letters lower case, becuse they are created in 
   Java language with all letters lower case.
  
 - The name 'main' is not a keyword, it is just a name of the method.
   we must also use the all letters lower case, because it is also
   predefined name
  
 - The names 'String, System' are predefined class names  
   which are available as part of JDK software. We must use them
   with first letter capital letter.
  
 - The names 'FirstProgram and args' are user defined names
   we can use either same name or different name 
   either with small letters or capital letters its our wish
   but we can not use space in between words.
  
 - It is recommanded to place '{' in the same line of class and method
   creation, we can place it in next line, but it is C language syntax style.
  
21. Types of errors occured in the program
	- In a program we will get 2 types of errors
		1. Compiletime Errors	(CEs)
		2. Runtime Errors	(REs)
    
	- An error that is occurred during a program compilation
	  is called compile time error. A CE is occurred due to 
	  syntax mistakes (wrong typing or wrong spelling). 
	  The Compiler throws CEs.
		For example: placing a statement without ends with ;
		             is a syntax mistake
    
	- An error that is occurred during a program execition
	  is called runtime error. A RE is occurred due to 
	  logical mistakes (wrong value or wrong logic). 
	  The JVM throws REs.
		For example: main method is not avilable in the class
		             is a logical mistake   

22. How can we become expert in a PL and How can we easily pass 
    'Written Test Exam'?
	- Learn as many CEs and REs as possible
	- Solve as many problems as possible  
	
23. Solving CEs and REs by ourself?	
    - To find max number of CEs and REs
    remove or modify the parts of the program
    as shown in the below take
     ============================================	
	  Senario		Expected Result
     ============================================	
	1. remove ;		CE: ';' is expected
	2. remove "		CE: unclosed String literal
	3. change S to s	CE: package system does not exist	

     
     

     
     ============================================	
     
24. Program #2: Develop a program to print your name on console
	
	class NamePrinter {
	   public static void main(String[] args) {
	        System.out.println("Swagat Kumar");
	   }
	}
	
	- Save above program with name NamePrinter.java		
	- cmd prompt
	   C:\Users\SK>D:
	   
	   D:>cd  D:\FSJD\01CJ\01JB
	   
	   D:\FSJD\01CJ\01JB>javac NamePrinter.java
				|->NamePrinter.class
				
	   D:\FSJD\01CJ\01JB>java NamePrinter
				|-> Swagat Kumar
	